// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TwitterCheck {
  id       Int      @id @default(autoincrement())
  username String
  url      String
  result   String   // 'AVAILABLE' | 'FORBIDDEN' | 'NOT_FOUND' | 'UNKNOWN'
  ip       String
  sessionId String?
  tweetDate DateTime?
  withShadowBanCheck Boolean @default(false)
  date     DateTime @default(now())

  @@index([username])
  @@index([date])
}

model ShadowBanCheck {
  id                    Int       @id @default(autoincrement())
  screen_name          String    // @以降のユーザー名
  not_found            Boolean   @default(false)  // ユーザーが存在しないかどうか
  suspend              Boolean   @default(false)  // アカウントが凍結されているかどうか
  protect              Boolean   @default(false)  // 鍵アカウントかどうか
  search_ban           Boolean   @default(false)  // 検索バンの状態
  search_suggestion_ban Boolean   @default(false)  // 検索サジェストバンの状態
  ghost_ban            Boolean   @default(false)  // ゴーストバンの状態
  reply_deboosting     Boolean   @default(false)  // リプライデブーストの状態
  sessionId            String    // 検索除外チェックと同じID
  ip                   String    @default("")// IPアドレス
  date                 DateTime  @default(now())  // チェック実施日時

  @@index([screen_name])
  @@index([date])
}

model TwitterAuthToken {
  id        Int      @id @default(1) // 常に1つのレコードのみ
  token     String
  updatedAt DateTime @updatedAt
}

model AuthToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  csrf_token String  @unique
  accountId String   @unique
  lastUsed  DateTime @default("2000-01-01T00:00:00Z") // 2000年1月1日をデフォルト値に
  resetTime DateTime @default(now()) // デフォルトで現在時刻
  updatedAt DateTime @default(now()) // トークン更新日時
}

model IpAccessControl {
  id         Int      @id @default(autoincrement())
  ip         String
  type       String   // "blacklist" または "whitelist"
  createdAt  DateTime @default(now())
}

model SystemSetting {
  id                Int      @id @default(autoincrement())
  key               String   @unique
  value             String
  updatedAt         DateTime @updatedAt
}

model ApiAccessLog {
  id             Int      @id @default(autoincrement())
  endpoint       String
  method         String
  requestIp      String
  connectionIp   String
  userAgent      String?
  referer        String?
  responseStatus Int
  responseTime   Int
  screenName     String?
  errorCode      Int?
  isBlocked      Boolean  @default(false)
  blockReason    String?
  timestamp      DateTime @default(now())

  @@index([timestamp])
  @@index([requestIp])
  @@index([isBlocked])
}